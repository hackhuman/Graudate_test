using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Net;
using System.Net.Security;
using System.Security.Cryptography.X509Certificates;
using System.IO;
using System.IO.Compression;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft;

namespace Httptest
{
    /// <summary>
    /// MainWindow.xaml 的交互逻辑
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, RoutedEventArgs e)
        {
            string loginUrl = "http://192.168.1.101:8000/api/v1/user/login";
            string loginData = "{\"password\":\"admin\",\"username\":\"admin\"}";
            CookieContainer cookies = new CookieContainer();
			string token=  LoginWeb.HttpPost(loginUrl, loginData,cookies);
			string CookieValue = cookies.ToString();
			textBox1.Text = cookies.ToString();
         }

        private void button2_Click(object sender, RoutedEventArgs e)
        {
            string GetListUrl = "http://192.168.1.101:8000/api/v1/node/";
            string ListData = "0/10";
            string list = LoginWeb.HttpGet(GetListUrl, ListData);
            string GetListJson = list;
            AlldevRoot rt = JsonConvert.DeserializeObject<AlldevRoot>(GetListJson);//取出json数据里面的数值
            MessageBox.Show("code="+rt.code+"\r\n" + "TotalCount="+ rt.totalCount+"\r\n");
            MessageBox.Show(rt.result[1].devEUI);//result是一个集合，因此不能直接对里面的元素进行访问
            
        }
        private void GetDevHistory_Click(object sender, RoutedEventArgs e)
        {
           string devEuI = text_DevEui.Text;
         
            string GetListUrl = "http://192.168.1.101:8000/api/v1/history/";
            string data = devEuI + "?limit=5&offset=0&begindate=2018-10-21&enddate=2018-10-23&type=0";
            string history = LoginWeb.HttpGet(GetListUrl, data);
            HistoryRoot history_json=JsonConvert.DeserializeObject<HistoryRoot>(history);
            text_liquidLvl.Text = history_json.result[2].payload;

        }

        class LoginWeb
    {
 
        /************************************************************************/
        /* Http Get请求
         * url为请求的网址
         * data为GET请求参数（格式为：key1=value1&key2=value2）
         */
        /************************************************************************/
        public static string HttpGet(string url, string data)
        {
            url = url  + data;
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Method = "GET";
            request.ContentType = "text/hmtl;charset=UTF-8";
            request.Headers.Add("Authorization", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJsb3JhLWFwcC1zZXJ2ZXIiLCJleHAiOjE1NDAyOTQxODgsImlzcyI6ImxvcmEtYXBwLXNlcnZlciIsIm5iZiI6MTU0MDIwNzc4OCwic3ViIjoidXNlciIsInVzZXJuYW1lIjoiYWRtaW4ifQ.LCGyomxLcJ_ZsVZ8Eb37qspYX6byNUZk_4X4y3XutFI");
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            Stream responseStream = response.GetResponseStream();
    
            StreamReader streamReader = new StreamReader(responseStream);
            string result = streamReader.ReadToEnd();
            streamReader.Close();
            responseStream.Close();
            return result;
        }
 
        /************************************************************************/
        /* Http Post 请求
         * url为请求的网址
         * data为POST请求参数（格式为：key1=value1&key2=value2）
         * cookie为存储Cookie的容器CookieContainer
         */
        /************************************************************************/
        public static string HttpPost(string url, string data, CookieContainer cookies)
        {
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Method = "POST";
            //FORM元素的enctype属性指定了表单数据向服务器提交时所采用的编码类型，默认的缺省值是“application/x-www-form-urlencoded”
            request.ContentType = "application/x-www-form-urlencoded";
            request.ContentLength = Encoding.UTF8.GetByteCount(data);
            request.CookieContainer = cookies;
            Stream requetStream = request.GetRequestStream();
            StreamWriter streamWriter = new StreamWriter(requetStream);
            streamWriter.Write(data);
            streamWriter.Close();
            request.CookieContainer = cookies;
           
 
            HttpWebResponse response = (HttpWebResponse)request.GetResponse();
            response.Cookies = cookies.GetCookies(response.ResponseUri);
            cookies.Add(response.Cookies);
            Stream responseStream = response.GetResponseStream();
            StreamReader streamReader = new StreamReader(responseStream, Encoding.GetEncoding("GB2312"));
            string result = streamReader.ReadToEnd();
            streamReader.Close();
            responseStream.Close();
            return result;
        }
    }
        /************************************************************************/
        /*获取所有节点json数据转实体类*/
        /************************************************************************/
        public class AlldevResultItem
        {
            /// <summary>
            /// 
            /// </summary>
            public string devEUI { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string appEUI { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string appKey { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int rxDelay { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int rx1DROffset { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string channelListID { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string onlineTime { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string timestamp { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string rxWindow { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int rx2DR { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string name { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string sensorIDList { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string longitude { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string latitude { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string isClassC { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int adrInterval { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int installationMargin { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string authCode { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int type { get; set; }
        }

        public class AlldevRoot
        {
            /// <summary>
            /// 
            /// </summary>
            public int code { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string totalCount { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public List<AlldevResultItem> result { get; set; }
        }

        /************************************************************************/
        /*获取节点历史信息json数据转实体类*/
        /************************************************************************/
        public class HistoryResultItem
        {
            /// <summary>
            /// 
            /// </summary>
            public string fCnt { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int rssi { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string dateTime { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public int fport { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string payload { get; set; }

            public string liquidLvl { get; set; }
        }

        public class HistoryRoot
        {
            /// <summary>
            /// 
            /// </summary>
            public int code { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public string totalCount { get; set; }
            /// <summary>
            /// 
            /// </summary>
            public List<HistoryResultItem> result { get; set; }
        }


        private void Window_Loaded(object sender, RoutedEventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, TextChangedEventArgs e)
        {

        }

        private void textBox2_TextChanged(object sender, TextChangedEventArgs e)
        {

        }





      
    

    }
}
